# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#
# Available fastlane tracks: production, beta, alpha, internal

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane


def which(cmd)
  exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
  ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
    exts.each do |ext|
      exe = File.join(path, "#{cmd}#{ext}")
      return exe if File.executable?(exe) && !File.directory?(exe)
    end
  end
  nil
end

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Google Play internal testing"
  lane :internal do
    Dir.chdir "../.." do
      fvm = which('fvm') || which('sh')
      sh(fvm, "flutter", "packages", "get")
      sh(fvm, "flutter", "clean")
      sh(fvm, "flutter", "build", "appbundle")
    end
    upload_to_play_store(
      track: 'internal',
      aab: '../build/app/outputs/bundle/release/app-release.aab',
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "informational lane that displays the currently promoted version codes or release name"
  lane :info_internal do
    google_play_track_version_codes(track: 'internal')
    google_play_track_release_names(track: 'internal')
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    upload_to_play_store(
      track: 'internal',
      track_promote_to: 'production',
    )
  end

  desc "informational lane that displays the currently promoted version codes or release name"
  lane :info do
    google_play_track_version_codes
    google_play_track_release_names
  end
end
